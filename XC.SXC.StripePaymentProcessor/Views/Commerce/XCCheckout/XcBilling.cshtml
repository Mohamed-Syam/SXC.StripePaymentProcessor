@*//-----------------------------------------------------------------------
    // Copyright 2016 Sitecore Corporation A/S
    // Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    // except in compliance with the License. You may obtain a copy of the License at
    //       http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software distributed under the
    // License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // either express or implied. See the License for the specific language governing permissions
    // and limitations under the License.
    // -------------------------------------------------------------------------------------------*@
@using System.Web.Mvc.Html
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Commerce.XA.Foundation.Common.Models
@using Sitecore.Commerce.XA.Feature.Cart.Models
@using Sitecore.Mvc
@model BillingRenderingModel
<!--Stripe Elements-->
 <script src="https://js.stripe.com/v3/"></script> 
<!--Stripe Elements-->
<!--Register Elements-->
<!-- <script src="/Scripts/Stripe/stripe.index.js"></script> -->
<!-- <!--Register Elements-->
<!-- <!--Localization-->
<!-- <script src="/Scripts/Stripe/l10n.js"></script> -->
<!--Localization-->

<style>
    .payment-method-icon {
        position: absolute;
        left: auto;
        top: 50%;
        width: 41px;
        height: 27px;
        margin-top: -14px;
        background-repeat: no-repeat;
        border: 1px solid transparent;
        -webkit-border-radius: 1px;
        -moz-border-radius: 1px;
        -ms-border-radius: 1px;
        -o-border-radius: 1px;
        border-radius: 1px
    }

        .payment-method-icon.visa {
            display: block;
            text-indent: -999em;
            background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite.png");
            background-position: 0 -423px;
            width: 44px;
            height: 28px
        }

    @@media only screen and (-webkit-min-device-pixel-ratio:1.5), only screen and (min--moz-device-pixel-ratio:1.5), only screen and (min-resolution:240dpi) {
        .payment-method-icon.visa {
            background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite@2x.png");
            background-size: 86px auto
        }
    }

    .payment-method-icon.master-card {
        display: block;
        text-indent: -999em;
        background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite.png");
        background-position: 0 -255px;
        width: 44px;
        height: 28px
    }

    @@media only screen and (-webkit-min-device-pixel-ratio:1.5), only screen and (min--moz-device-pixel-ratio:1.5), only screen and (min-resolution:240dpi) {
        .payment-method-icon.master-card {
            background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite@2x.png");
            background-size: 86px auto
        }
    }

    .payment-method-icon.american-express {
        display: block;
        text-indent: -999em;
        background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite.png");
        background-position: 0 -311px;
        width: 44px;
        height: 28px
    }

    @@media only screen and (-webkit-min-device-pixel-ratio:1.5), only screen and (min--moz-device-pixel-ratio:1.5), only screen and (min-resolution:240dpi) {
        .payment-method-icon.american-express {
            background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite@2x.png");
            background-size: 86px auto
        }
    }

    .payment-method-icon.discover {
        display: block;
        text-indent: -999em;
        background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite.png");
        background-position: 0 -395px;
        width: 44px;
        height: 28px
    }

    @@media only screen and (-webkit-min-device-pixel-ratio:1.5), only screen and (min--moz-device-pixel-ratio:1.5), only screen and (min-resolution:240dpi) {
        .payment-method-icon.discover {
            background-image: url("https://assets.braintreegateway.com//dropin/2.32.1/images/braintree_dropin_sprite@2x.png");
            background-size: 86px auto
        }
    }

    #stripe-creditcard {
        height: 34px;
        border-radius: 4px;
        background-color: #fff;
        color: #747a83;
        border: solid 1px #b9bcc1;
        background-image: none;
        box-shadow: none !important;
        text-align: left;
        -webkit-transition: all 0.3s;
        transition: all 0.3s;
        padding: 7px 10px;
        line-height: 1.42857143;
    }

    .component.cxa-checkoutbilling-component .apply-ach-payment-toggle {
        color: #0088cc;
        font-size: 14px;
    }

        .component.cxa-checkoutbilling-component .apply-ach-payment-toggle:hover {
            color: #0e909f;
        }

        .component.cxa-checkoutbilling-component .apply-ach-payment-toggle:before {
            display: inline-block;
            font-family: "SCCXAICONS";
            font-style: normal;
            -webkit-font-smoothing: antialiased;
            content: "";
            font-size: 10px;
        }

        .component.cxa-checkoutbilling-component .apply-ach-payment-toggle.open:before {
            display: inline-block;
            font-family: "SCCXAICONS";
            font-style: normal;
            -webkit-font-smoothing: antialiased;
            content: "";
            font-size: 10px;
        }

    .loading-overlay {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: #fff;
        opacity: 0.6;
    }

.spin-loader { height: 100px; background: url("https://mir-s3-cdn-cf.behance.net/project_modules/disp/dae67631234507.564a1d230a290.gif") no-repeat center center transparent; position: relative; top: 25%; }

    .StripeElement--webkit-autofill {
        background-color: rgb(236, 236, 236) !important;
    }
</style>
<div @Html.Sxa().Component("cxa-checkoutbilling-component", Model.Attributes)>

    @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
    {
        @Model.ErrorMessage
    }
    else
    {
        var currentItem = Html.Sitecore().CurrentItem;

        var prevButtonLink = Model.PreviousPageLink;
        var prevButtonLabel = Html.Sitecore().Field("Previous Button Label", currentItem);
        var nextvButtonLabel = Html.Sitecore().Field("Next Button Label", currentItem);
        var processing = currentItem["Next Button In-progress Label"];
        var otherAddressLabel = currentItem["Choose Another Address Hint Text"];

        // Contact Labels
        var contactInfoHeaderLabel = Html.Sitecore().Field("Contact Information Header", currentItem);
        var emailAddressLabel = Html.Sitecore().Field("Email Address Label", currentItem);
        var emailAddressLabelPlaceholder = currentItem["Email Address Label"];
        var confirmEmailAddressLabel = Html.Sitecore().Field("Confirm Email Address Label", currentItem);
        var confirmEmailAddressLabelPlaceholder = currentItem["Confirm Email Address Label"];
        var emailMustMatchMessage = @Html.Sitecore().CurrentItem["Email Must Match Message"];

        //Credit Card Labels
        var paymentOptionsHeaderLabel = Html.Sitecore().Field("Payment Options Header", currentItem);
        var cardNumberLabel = Html.Sitecore().Field("Card Number Hint Text", currentItem);
        var cardNumberLabelPlaceholder = currentItem["Card Number Hint Text"];
        var expirationDateLabel = Html.Sitecore().Field("Expiration Date Hint Text", currentItem);

        //Billing Labels
        var billingAddressHeaderLabel = Html.Sitecore().Field("Billing Address Header", currentItem);
        var billingNameLabel = Html.Sitecore().Field("Billing Name Label", currentItem);
        var billingNameLabelPlaceholder = currentItem["Billing Name Label"];
        var addressLabel = Html.Sitecore().Field("Address Label", currentItem);
        var addressLabelPlaceholder = currentItem["Address Label"];
        var cityLabel = Html.Sitecore().Field("City Label", currentItem);
        var cityLabelPlaceholder = currentItem["City Label"];
        var zipCodeLabel = Html.Sitecore().Field("Zip Code Label", currentItem);
        var zipCodeLabelPlaceholder = currentItem["Zip Code Label"];
        var countryLabel = Html.Sitecore().Field("Country Label", currentItem);
        var validatePaymentLabel = Html.Sitecore().Field("Validate Payment Button Label", currentItem);
        var stateLabel = Html.Sitecore().Field("State Label", currentItem);
        var stateLabelPlaceholder = currentItem["State Label"];
        var sameAsShipping = Html.Sitecore().Field("Same Shipping Address Text", currentItem);

        // Loyalty & Giftcards Labels
        var promocardsHeaderLabel = Html.Sitecore().Field("Gift Cards Header", currentItem);
        var applyGiftLabel = Html.Sitecore().Field("Apply Gift Card Header", currentItem);
        var subtitleGiftLabel = Html.Sitecore().Field("Subtitle Gift Label", currentItem);
        var paymentAmountLabel = Html.Sitecore().Field("Payment Amount Label", currentItem);
        var paymentAmountLabelPlaceholder = currentItem["Payment Amount Label"];
        var getBalanceButtonLabel = Html.Sitecore().Field("Get Balance Button Label", currentItem);
        var applyFullAmountButtonLabel = Html.Sitecore().Field("Apply Amount Button Label", currentItem);
        var addGiftCardButtonLabel = Html.Sitecore().Field("Add Gift Card Button Label", currentItem);
        var giftCardLabel = Html.Sitecore().Field("Gift Card Label", currentItem);
        var removeLabel = Html.Sitecore().Field("Remove Label", currentItem);
        var gettingBalanceLabel = currentItem["Get Balance Button In-progress Label"];

        // Payment Information Labels
        var paymentInfoHeaderLabel = Html.Sitecore().Field("Payment Info Header", currentItem);
        var applyCreditCardLabel = Html.Sitecore().Field("Apply Credit Card Header", currentItem);
        var paymentTotalLabel = Html.Sitecore().Field("Payment Total Label", currentItem);
        var taxesLabel = Html.Sitecore().Field("Taxes Label", currentItem);
        var savingsLabel = Html.Sitecore().Field("Savings Label", currentItem);
        var totalLabel = Html.Sitecore().Field("Total Label", currentItem);

        var creditCardLabel = Html.Sitecore().Field("Credit Card Label", currentItem);
        var orderInformationLabel = Html.Sitecore().Field("Order Information Header", currentItem);
        var subtotalLabel = Html.Sitecore().Field("Subtotal Label", currentItem);
        var shippingCostLabel = Html.Sitecore().Field("Shipping Cost Label", currentItem);

        var billingInformationLabel = Html.Sitecore().Field("Billing Information Header", currentItem);

        <div id="component-content">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.Sitecore().FormHandler()

                <div class="contact-info-section">
                    <h4 class="contact-info-header">@contactInfoHeaderLabel</h4>
                    <div class="contact-info-form">
                        <div class="email-address">
                            <label for="BillingInput-Email">@emailAddressLabel *</label>
                            <input type="text" class="email-input" id="billingInputEmail" placeholder="@emailAddressLabelPlaceholder" data-bind="value: billingEmail">
                        </div>
                        <div class="confirm-email">
                            <label>@confirmEmailAddressLabel *</label>
                            <input type="text" class="confirm-email-input" placeholder="@confirmEmailAddressLabelPlaceholder" data-bind="value: billingConfirmEmail">
                        </div>
                    </div>
                </div>
                <a href="#" class="apply-credit-card-toggle ccpayment" style="margin-bottom: 5px; display: block;" data-bind="click: $root.isEmailFilled">
                    <span class="credit-card-toggle-icon"></span>@applyCreditCardLabel
                </a>
                <div class="credit-card-payment-section stripepaymentform" style="display: none">
                    <div>
                        <h4 class="credit-card-payment-header">Enter Billing and Payment Information</h4>
                        <div style="margin-top: 10px;">
                            <form class="stripepaymentform">
                                <div id="stripe-paymentRequest" style="margin-top: 10px;">
                                    <!--Stripe PaymentRequestButton element inserted here-->
                                </div>
                                <legend class="card-only"></legend>
                                <legend class="payment-request-available"></legend>
                                <div class="credit-card-payment-form">
                                    <div class="billing-address-container" data-bind="with: billingAddress">
                                        <div class="billing-address-dropdown">
                                            <select class="select-billing-address" data-bind="template: { name: 'select-billing-address-template', foreach: $root.userAddresses, as:'address'}, value: $parent.selectedBillingAddress,enable: $parent.creditCardEnable" title="@sameAsShipping"></select>
                                            @if (!Sitecore.Context.PageMode.IsExperienceEditor)
                                            {
                                                <script type="text/html" id="select-billing-address-template">
                                                    <!-- ko if: externalId() === 'UseShipping' && $root.isShipAll -->
                                                    <option data-bind="attr:{ value:externalId }, text: fullAddress"></option>
                                                    <!-- /ko -->
                                                    <!-- ko if: externalId() !== 'UseShipping' -->
                                                    <option data-bind="attr:{ value:externalId }, text: fullAddress"></option>
                                                    <!-- /ko -->
                                                </script>
                                            }
                                            else
                                            {
                                                <script type="text/html" id="select-billing-address-template">
                                                </script>
                                            }
                                        </div>
                                        <div class="billing-addresss-details">
                                            <input type="hidden" id="billingAddress-ExternalId" data-bind="value: externalId" />
                                            <div class="address-name">
                                                <label for="address-name">@billingNameLabel *</label>
                                                <input id="address-name" type="text" class="address-name-textbox" placeholder="@billingNameLabelPlaceholder" data-bind="value: name, enable: $parent.billingAddressEnable">
                                            </div>
                                            <div class="address-street">
                                                <label for="address-address1">@addressLabel *</label>
                                                <input id="address-address1" type="text" class="address-street-textbox" placeholder="@addressLabelPlaceholder" data-bind="value: address1, enable: $parent.billingAddressEnable">
                                            </div>

                                            <div class="address-city-name">
                                                <label for="address-city">@cityLabel *</label>
                                                <input id="address-city" type="text" class="address-city-textbox" placeholder="@cityLabelPlaceholder" data-bind="value: city, enable: $parent.billingAddressEnable">
                                            </div>
                                            @*<div class="address-city-zipcode">
                                                <label for="address-zipPostalCode">@zipCodeLabel *</label>
                                                <input id="address-zipPostalCode" type="text" class="address-zip-textbox" id="billingAddress-Zipcode" placeholder="@zipCodeLabelPlaceholder" data-bind="value: zipPostalCode, enable: $parent.billingAddressEnable">
                                            </div>*@
                                            <div class="address-country-name">

                                                <label for="address-country">@countryLabel *</label>
                                                <select id="address-country" class="address-country-textbox" data-bind="options: $parent.countries, optionsText:'country', optionsValue:'code', value: country, enable: $parent.billingAddressEnable"></select>
                                            </div>
                                            <div class="address-state-name">
                                                <label for="address-state">@stateLabel *</label>
                                                <!-- ko if: states == 'undefined' -->
                                                <select class="address-state-dropdown" data-bind="options: $parent.states, optionsText:'name', optionsValue:'code', value: state, enable: $parent.billingAddressEnable"></select>
                                                <!-- /ko -->
                                                <!-- ko if: states != 'undefined' -->
                                                <input id="address-state" type="text" class="address-state-textbox" id="billingAddress-State" placeholder="@stateLabelPlaceholder" data-bind="value: state, enable: $parent.billingAddressEnable">
                                                <!-- /ko -->
                                            </div>
                                        </div>
                                        <div>
                                            <label>Payment Amount</label>
                                            <input id="payment-amount" type="text" class="payment-amount" data-bind="value: $root.cart().total" disabled />
                                        </div>

                                    </div>
                                    <div style="width: 100%;">
                                        <div>
                                            <label for="stripe-creditcard" style="margin-bottom: 5px;">Enter Credit Card or Debit Card details</label>
                                            <div style="width: 100%" class="input" id="stripe-creditcard"></div>
                                        </div>
                                        <button style="width: 100%;margin-top: 10px;margin-bottom: 20px;" class="stripePaymentButton btn btn-primary" data-bind="enable: $root.isEmailFilled" id="submitStripePayment" type="submit">Validate Payment</button>
                                    </div>
                                </div>
                            </form>
                            </div>
                    </div>
                </div>
                <!-- ACH payments Start-->

                <a href="#" class="apply-ach-payment-toggle achpayment" style="margin-bottom: 5px; display: block; font-weight: 600;" data-bind="click: $root.isEmailFilled">
                    <span class="credit-card-toggle-icon"></span>Apply ACH Payment
                </a>
                <div class="ach-payment-section stripepaymentform" style="display: none;">
                    <form class="stripepaymentform-ach" style="margin-top: 20px;">
                        <p for="stripe-ach" style="margin-bottom: 15px;">
                            <div style="position: absolute;height: 100%;width: 1.4em;left: 16px;" class="Icon BankIcon is-loaded"><svg focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 22 22"><path class="Icon-fill" d="M9.51 2.29l7.21 4.61a.6.6 0 0 1-.34 1.1H.62a.6.6 0 0 1-.34-1.1l7.21-4.61a1.89 1.89 0 0 1 2.02 0zM1.08 16.47l-.83 2c-.12.28 0 .57.28.57h15.66c.27 0 .41-.29.29-.57l-.84-2A.73.73 0 0 0 15 16H1.73a.74.74 0 0 0-.65.47z" opacity=".4"></path><path class="Icon-fill" d="M2 9h2.5v6H2zm10.5 0H15v6h-2.5zM7.25 9h2.5v6h-2.5z" opacity=".2"></path></svg></div>
                            <span style="display: inline-block;padding-left: 5px;margin-top: -5px;padding-bottom: 5px;font-size: 16px;margin-left: 15px;">Account Ending in: 2480</span>
                        </p>
                        <div style="margin: 10px 0;">
                            <label>Payment Amount</label>
                            <input id="payment-amount" type="text" class="payment-amount" data-bind="value: $root.cart().total" disabled />
                        </div>
                        <button style="width: 100%;margin-top: 10px;margin-bottom: 20px;" class="stripePaymentButton btn btn-primary" data-bind="click: $root.achPayment().processACHPayment, text: $root.achPayment().achButtonMessage" id="submitAchPayment" type="submit"></button>

                    </form>
                </div>
                <!-- ACH payments End-->
                <a href="#" class="apply-gift-card-toggle giftCardPayment" style="margin-bottom: 5px; display: block; font-weight: 600" data-bind="click: $root.isEmailFilled">
                    <span><span class="apply-gift-card-toggle-icon"></span></span>@applyGiftLabel
                </a>
                <div class="apply-gift-card-section" data-bind="with: giftCardPayment" id="billingPayGiftCardContainer" style="display: none">
                    <h4 class="apply-gift-card-header">@promocardsHeaderLabel</h4>
                    <div class="apply-gif-card-content">
                        <h5 class="apply-gif-card-subtitle">@subtitleGiftLabel</h5>

                        <div class="apply-gif-card-balance">
                            <div class="payment-method">
                                <label>@cardNumberLabel *</label>
                                <input type="text" class="payment-method-id-textbox" id="giftCardPayment_PaymentMethodID" placeholder="@cardNumberLabelPlaceholder" data-bind="value: giftCardNumber, valueUpdate: 'afterkeydown'">
                            </div>
                            <div class="payment-get-balance">
                                <span data-bind="text: formattedBalance"></span>
                                <button type="button" class="get-balance-btn" data-loading-text="@gettingBalanceLabel" data-bind="click: getBalance, enable: giftCardNumber().length > 0">@getBalanceButtonLabel</button>
                            </div>
                        </div>
                        <div class="apply-gif-card-amount">
                            <div class="payment-amount">
                                <label>@paymentAmountLabel *</label>
                                <input type="text" class="payment-amount-textbox" id="giftCardPayment_Amount" placeholder="@paymentAmountLabelPlaceholder" data-bind="value: giftCardAmount, valueUpdate: 'afterkeydown'">
                            </div>
                            <div class="payment" style="text-align: right;">
                                <button type="button" class="apply-full-amount-btn" data-bind="enable: balance() > 0, click: applyBalance">@applyFullAmountButtonLabel</button>
                                <button type="button" class="gift-card-payment-btn" data-bind="enable: enableAddCard, click: addCard">@addGiftCardButtonLabel</button>
                            </div>
                        </div>
                        <div class="giftcard-status" style="display: none;" data-bind="visible: isAdded">
                            <!-- Only appears if a card has been added -->
                            <div class="applied-gift-card-info">
                                <span>@giftCardLabel:</span>
                                <span class="giftcard-payment-number" data-bind="text: giftCardNumber"></span>
                                <span> / </span>
                                <span class="giftcard-aplied-amount" data-bind="text: giftCardAmount"><span data-bind="text: $root.currencyCode"></span></span>

                            </div>
                            <div class="delete-applied-card">
                                <a href="#" class="remove-gift-card-link" data-bind="click: removeCard">@removeLabel</a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="billing-summary">
                    <div class="billing-payment-summary">
                        <div class="payment-info-header"><h4>@paymentInfoHeaderLabel</h4></div>
                        <div class="payment-summary order-summary-giftcard" data-bind="visible: $root.giftCardPayment().isAdded">
                            <span>@giftCardLabel</span>
                            <div>
                                <span class="billing-giftcard-amount" data-bind="text: formatCurrency($root.giftCardPayment().giftCardAmountRawValue, 2, '@Model.CurrencyDecimalSeparator', '@Model.CurrencySymbol', '@Model.CurrencyGroupSeparator', @Model.CurrencySymbolPosition)"></span>
                                <span data-bind="text: $root.currencyCode"></span>
                            </div>
                        </div>
                        <div class="payment-summary order-summary-creditcard" data-bind="visible: $root.creditCardPayment().isAdded">
                            <span>@creditCardLabel</span>
                            <div>
                                <span id="billing-creditcard-amount" data-bind="text: formatCurrency($root.creditCardPayment().creditCardAmount, 2, '@Model.CurrencyDecimalSeparator', '@Model.CurrencySymbol', '@Model.CurrencyGroupSeparator', @Model.CurrencySymbolPosition)"></span>
                                <span data-bind="text: $root.currencyCode"></span>
                            </div>
                        </div>
                        <div class="payment-summary order-summary-payment-total">
                            <span>@paymentTotalLabel</span>
                            <span class="payment-total" data-bind="text: formatCurrency($root.paymentTotal(), 2, '@Model.CurrencyDecimalSeparator', '@Model.CurrencySymbol', '@Model.CurrencyGroupSeparator', @Model.CurrencySymbolPosition)"><span data-bind="text: $root.currencyCode"></span></span>
                        </div>
                    </div>
                    <div class="billing-total-summary">
                        <div class="order-information-header"><h4>@orderInformationLabel</h4></div>
                        <div class="order-summary order-summary-subtotal">
                            <span>@subtotalLabel</span>
                            <span class="billing-subTotal" data-bind="text: cart().subTotal"></span>
                        </div>
                        <div class="order-summary order-summary-discount">
                            <span>@savingsLabel</span>
                            <span class="billing-discount" data-bind="text: cart().discount"></span>
                        </div>
                        <div class="order-summary order-summary-shipping-cost">
                            <span>@shippingCostLabel<span id="billingShippingCostLabel"></span></span>
                            <span class="billing-shipping-cost" data-bind="text: cart().shippingTotal"></span>
                        </div>
                        <div class="order-summary order-summary-tax-total">
                            <span>@taxesLabel</span>
                            <span class="billing-tax-total" data-bind="text: cart().taxTotal"></span>
                        </div>
                        <div class="order-summary order-summary-total">
                            <span>@totalLabel</span>
                            <span class="billing-order-total" data-bind="text: cart().total"></span>
                        </div>
                    </div>
                </div>

                <div class="buttons-row">
                    <a class="previous-button" href="@prevButtonLink">@prevButtonLabel</a>
                    <button class="to-confirm-button" data-loading-text="@processing" data-bind="enable: enableToConfirm || $root.achPayment().paymentProcessed, click: goToNextPageClick">@nextvButtonLabel</button>
                </div>
                <div class="loading-overlay" data-bind="visible: $root.paymentProcessing">
                    <div class="spin-loader"></div>
                </div>

            }
        </div>


        <div class="hidden">
            <input type="hidden" id="EmailsMustMatchMessage" value="@emailMustMatchMessage" />
            <input type="hidden" id="OtherAddressLabel" value="@otherAddressLabel" />
            <input type="hidden" id="BillingItemPath" value="@Model.DeliveryItemPath" />
        </div>
    }

</div>
